[{"C:\\Projects\\movies-rating-booking-app\\client\\src\\index.js":"1","C:\\Projects\\movies-rating-booking-app\\client\\src\\App.js":"2","C:\\Projects\\movies-rating-booking-app\\client\\src\\reportWebVitals.js":"3","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\movieList.component.js":"4","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actorList.component.js":"5","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchMoviePage.component.js":"6","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchBar.component.js":"7","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchActorPage.component.js":"8","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actor.component.js":"9","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\viewTopMovies.component.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1718,"mtime":1610014705815,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1415,"mtime":1610013191215,"results":"15","hashOfConfig":"12"},{"size":425,"mtime":1609948934544,"results":"16","hashOfConfig":"12"},{"size":2037,"mtime":1610014261091,"results":"17","hashOfConfig":"12"},{"size":347,"mtime":1610010656176,"results":"18","hashOfConfig":"12"},{"size":1622,"mtime":1610010359668,"results":"19","hashOfConfig":"12"},{"size":566,"mtime":1609948923191,"results":"20","hashOfConfig":"12"},{"size":3574,"mtime":1610014232206,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"i3hpml",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Projects\\movies-rating-booking-app\\client\\src\\index.js",[],["46","47"],"C:\\Projects\\movies-rating-booking-app\\client\\src\\App.js",["48","49"],"C:\\Projects\\movies-rating-booking-app\\client\\src\\reportWebVitals.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\movieList.component.js",["50","51"],"import React from 'react'\r\nimport Actor from './actor.component'\r\n\r\n\r\nconst MovieList = ({movieList={}})=> {\r\n    \r\n    return(\r\n        Object.keys(movieList).map((k,index)=>{\r\n            if (k){\r\n                var movie = movieList[k]\r\n                // console.log(movie)\r\n                return (\r\n                    <tr key={index}>\r\n                        <td><img src={movie.thumbnail_url}/></td>\r\n                        <td>{movie.title}</td>\r\n                        <td>{movie.movie_year}</td>\r\n                        <td>{movie.rating}</td>\r\n                        <td>{movie.num_of_ratings}</td>\r\n                        <td>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {movie.actors && movie.actors.map((actor, i)=>\r\n                                    <li className=\"list-group-item\" key ={i}>\r\n                                        <Actor name={actor} />\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </td>\r\n                        <td><a target=\"_blank\" href={\"https://www.imdb.com/find?q=\" +movie.title } className=\"btn btn-primary\">Book</a></td>\r\n                    </tr>\r\n                )   \r\n            }\r\n            // console.log(\"Returning null\")\r\n            return null\r\n        })\r\n    )\r\n}\r\n\r\nexport default MovieList","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actorList.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchMoviePage.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchBar.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchActorPage.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actor.component.js",["52"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Actor = ({name})=>{\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n    const fetchData = async() =>{\r\n        return await axios.get('http://localhost:5000/api/actors/' + name)\r\n            .then(res => {\r\n                setUrl(res.data[0].url)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {fetchData()},[])\r\n\r\n    return (\r\n        <a href={url}> {name}</a>\r\n    )\r\n    \r\n}\r\n\r\nexport default Actor\r\n","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\viewTopMovies.component.js",["53","54"],"import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport MovieList from \"./movieList.component\"\r\n\r\n\r\nconst SearchMoviePage = (props) => {\r\n    const [input, setInput] = useState('')\r\n    const [movieListDefault, setMovieListDefault] = useState()\r\n    const [movieList, setMovieList] = useState()\r\n    const [yearList, setYearList] = useState()\r\n\r\n    const fetchData = async() =>{\r\n        return await axios.get('http://localhost:5000/api/movies/')\r\n            .then(res => {\r\n                setMovieListDefault(sortMoviesByRating(res.data))\r\n                setMovieList(res.data);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const fetchYearData = async() =>{\r\n        return await axios.get('http://localhost:5000/api/movies/getYears')\r\n            .then(res => {\r\n                setYearList(res.data)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    const sortMoviesByRating = (movieList) =>{\r\n        if(movieList) {\r\n            var movieIdAndRating = []\r\n            var result = []\r\n    \r\n            for (const [key,value] of Object.entries(movieList)){\r\n                movieIdAndRating.push([key,value.rating])\r\n            }\r\n    \r\n            movieIdAndRating.sort((a,b)=>{\r\n                return b[1] - a[1]\r\n            })\r\n    \r\n            for (var movie of movieIdAndRating){\r\n                result.push(movieList[movie[0]])\r\n            }\r\n\r\n            //console.log(result)\r\n\r\n            return result\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const updateInput = (input) =>{\r\n        console.log(movieListDefault)\r\n        if (input === \"all\"){\r\n            setInput(input)\r\n            setMovieList(sortMoviesByRating(movieListDefault))\r\n        }\r\n        else{\r\n            const filtered = Object.values(movieListDefault)\r\n            .filter(movie =>{\r\n                return movie.movie_year.includes(input.toLowerCase())\r\n            })\r\n            console.log(filtered)\r\n            setInput(input)\r\n            setMovieList(sortMoviesByRating(filtered))\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {fetchData()},[])\r\n    useEffect(()=> {fetchYearData()}, [])\r\n    \r\n\r\n    return (\r\n        <div className='container-fluid my-3'>\r\n            <h3>Search Movie by Year</h3>\r\n            <div className=\"row\">\r\n                <select className=\"form-control col-sm-3\" id=\"exampleFormControlSelect1\" onChange={(e) => updateInput(e.target.value)}>\r\n                    <option value=\"\" disabled selected>Select a year</option>\r\n                    <option value=\"all\">All</option>\r\n                    {yearList && yearList.map(year=> {\r\n                        return <option value={year}>{year}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n                \r\n            <table className=\"table\" style={{ marginTop: 20 }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Banner</th>\r\n                        <th>Title</th>\r\n                        <th>Year</th>\r\n                        <th>Rating</th>\r\n                        <th>Number of Ratings</th>\r\n                        <th>Actors</th>\r\n                        <th>Make Booking</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <MovieList movieList={movieList}/>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default SearchMoviePage",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":9},{"ruleId":"59","severity":1,"message":"63","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":14,"column":29,"nodeType":"66","endLine":14,"endColumn":61},{"ruleId":"67","severity":1,"message":"68","line":28,"column":32,"nodeType":"69","endLine":28,"endColumn":47},{"ruleId":"70","severity":1,"message":"71","line":17,"column":35,"nodeType":"72","endLine":17,"endColumn":37,"suggestions":"73"},{"ruleId":"59","severity":1,"message":"74","line":7,"column":12,"nodeType":"61","messageId":"62","endLine":7,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":77,"column":35,"nodeType":"72","endLine":77,"endColumn":37,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["78"],"'input' is assigned a value but never used.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"80","fix":"82"},"Update the dependencies array to be: [fetchData]",{"range":"83","text":"84"},{"range":"85","text":"84"},[470,472],"[fetchData]",[2216,2218]]