[{"C:\\Projects\\movies-rating-booking-app\\client\\src\\index.js":"1","C:\\Projects\\movies-rating-booking-app\\client\\src\\App.js":"2","C:\\Projects\\movies-rating-booking-app\\client\\src\\reportWebVitals.js":"3","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchMoviePage.component.js":"4","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchBar.component.js":"5","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchActorPage.component.js":"6","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actor.component.js":"7","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\viewTopMovies.component.js":"8","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\movieTable.component.js":"9","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actorTable.component.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1728,"mtime":1610035761652,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1446,"mtime":1610034538546,"results":"15","hashOfConfig":"12"},{"size":347,"mtime":1610010656176,"results":"16","hashOfConfig":"12"},{"size":1396,"mtime":1610034507651,"results":"17","hashOfConfig":"12"},{"size":564,"mtime":1610034479497,"results":"18","hashOfConfig":"12"},{"size":2987,"mtime":1610034545038,"results":"19","hashOfConfig":"12"},{"size":1706,"mtime":1610035542360,"results":"20","hashOfConfig":"12"},{"size":563,"mtime":1610027886425,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5mu73i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Projects\\movies-rating-booking-app\\client\\src\\index.js",[],["46","47"],"C:\\Projects\\movies-rating-booking-app\\client\\src\\App.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\reportWebVitals.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchMoviePage.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchBar.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\searchActorPage.component.js",[],"C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actor.component.js",["48","49"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nconst Actor = ({name})=>{\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n    const fetchData = async() =>{\r\n        return await axios.get('/api/actors/' + name)\r\n            .then(res => {\r\n                setUrl(res.data[0].url)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {fetchData()},[])\r\n\r\n    return (\r\n        <a  target=\"_blank\" href={url}> {name}</a>\r\n    )\r\n    \r\n}\r\n\r\nexport default Actor\r\n","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\viewTopMovies.component.js",["50"],"import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport MovieTable from \"./movieTable.component\"\r\n\r\n\r\nconst SearchMoviePage = (props) => {\r\n    const [input, setInput] = useState('')\r\n    const [movieListDefault, setMovieListDefault] = useState()\r\n    const [movieList, setMovieList] = useState()\r\n    const [yearList, setYearList] = useState()\r\n\r\n    const fetchData = async() =>{\r\n        return await axios.get('http://localhost:5000/api/movies/')\r\n            .then(res => {\r\n                setMovieListDefault(res.data)\r\n                setMovieList(res.data);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const fetchYearData = async() =>{\r\n        return await axios.get('/api/movies/getYears')\r\n            .then(res => {\r\n                setYearList(res.data)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    const sortMoviesByRating = (movieList) =>{\r\n        if(movieList) {\r\n            var movieIdAndRating = []\r\n            var result = []\r\n    \r\n            for (const [key,value] of Object.entries(movieList)){\r\n                movieIdAndRating.push([key,value.rating])\r\n            }\r\n    \r\n            movieIdAndRating.sort((a,b)=>{\r\n                return b[1] - a[1]\r\n            })\r\n    \r\n            for (var movie of movieIdAndRating){\r\n                result.push(movieList[movie[0]])\r\n            }\r\n\r\n            //console.log(result)\r\n\r\n            return result\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const updateInput = (input) =>{\r\n        console.log(movieListDefault)\r\n        if (input === \"all\"){\r\n            setInput(input)\r\n            setMovieList(sortMoviesByRating(movieListDefault))\r\n        }\r\n        else{\r\n            const filtered = Object.values(movieListDefault)\r\n            .filter(movie =>{\r\n                return movie.movie_year.includes(input.toLowerCase())\r\n            })\r\n            console.log(filtered)\r\n            setInput(input)\r\n            setMovieList(sortMoviesByRating(filtered))\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {fetchData()},[])\r\n    useEffect(()=> {fetchYearData()}, [])\r\n    \r\n\r\n    return (\r\n        <div className='container-fluid my-3'>\r\n            <h3>Search Movie by Year</h3>\r\n            <div className=\"row\">\r\n                <select className=\"form-control col-sm-3\" id=\"exampleFormControlSelect1\" onChange={(e) => updateInput(e.target.value)}>\r\n                    <option value=\"\" disabled selected>Select a year</option>\r\n                    <option value=\"all\">All</option>\r\n                    {yearList && yearList.map(year=> {\r\n                        return <option value={year}>{year}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            \r\n                \r\n            <MovieTable movieList={movieList}/>\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default SearchMoviePage","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\movieTable.component.js",["51","52","53","54"],"import React, {useState, useEffect} from 'react';\r\n// import MovieList from \"./movieList.component\"\r\nimport Actor from './actor.component'\r\nimport DataTable from 'react-data-table-component';\r\n\r\n\r\nconst MoviePage = ({movieList=[]}) => {\r\n    const columns = [\r\n        {\r\n          name: 'Banner',\r\n          cell: row => <img src={row.thumbnail_url}/>\r\n        },\r\n        {\r\n            name: 'Title',\r\n            sortable: true,\r\n            selector: row => row.title\r\n        },\r\n        {\r\n            name: 'Year',\r\n            sortable: true,\r\n            selector: row => row.movie_year\r\n        },\r\n        {\r\n            name: 'rating',\r\n            sortable: true,\r\n            selector: row => row.rating\r\n        },\r\n        {\r\n            name: 'Number of Ratings',\r\n            sortable: true,\r\n            selector: row => row.num_of_ratings\r\n        },\r\n        {\r\n            name: 'Actors',\r\n            cell: row => <ul className=\"list-group list-group-flush\">\r\n                        {row.actors && row.actors.map((actor, i)=>\r\n                            <li className=\"list-group-item\" key ={i}>\r\n                                <Actor name={actor} />\r\n                            </li>\r\n                        )}\r\n                    </ul>,\r\n        },\r\n        {\r\n            name: 'Make Booking',\r\n            cell: row => <a target=\"_blank\" href={\"https://www.imdb.com/find?q=\" +row.title } className=\"btn btn-primary\">Book</a>\r\n        },\r\n\r\n      ];\r\n\r\n\r\n    return (\r\n        <DataTable\r\n            columns={columns}\r\n            data ={[...Object.values(movieList)]}\r\n            noHeader\r\n            pagination\r\n        />\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default MoviePage","C:\\Projects\\movies-rating-booking-app\\client\\src\\components\\actorTable.component.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":18,"column":35,"nodeType":"61","endLine":18,"endColumn":37,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":21,"column":13,"nodeType":"65","endLine":21,"endColumn":28},{"ruleId":"66","severity":1,"message":"67","line":7,"column":12,"nodeType":"68","messageId":"69","endLine":7,"endColumn":17},{"ruleId":"66","severity":1,"message":"70","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"71","line":1,"column":26,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":11,"column":24,"nodeType":"74","endLine":11,"endColumn":54},{"ruleId":"63","severity":1,"message":"64","line":45,"column":29,"nodeType":"65","endLine":45,"endColumn":44},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["77"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [fetchData]",{"range":"80","text":"81"},[451,453],"[fetchData]"]